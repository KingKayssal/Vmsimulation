# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import storage_pb2 as storage__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in storage_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StorageControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyDuplicate = channel.unary_unary(
                '/storage.StorageController/NotifyDuplicate',
                request_serializer=storage__pb2.FileAnnouncement.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.RegisterNode = channel.unary_unary(
                '/storage.StorageController/RegisterNode',
                request_serializer=storage__pb2.NodeInfo.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.Heartbeat = channel.unary_unary(
                '/storage.StorageController/Heartbeat',
                request_serializer=storage__pb2.NodeInfo.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.SetOffline = channel.unary_unary(
                '/storage.StorageController/SetOffline',
                request_serializer=storage__pb2.NodeInfo.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.AnnounceFile = channel.unary_unary(
                '/storage.StorageController/AnnounceFile',
                request_serializer=storage__pb2.FileAnnouncement.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.GetFileLocations = channel.unary_unary(
                '/storage.StorageController/GetFileLocations',
                request_serializer=storage__pb2.FileName.SerializeToString,
                response_deserializer=storage__pb2.NodeLocationList.FromString,
                _registered_method=True)
        self.CreateFile = channel.unary_unary(
                '/storage.StorageController/CreateFile',
                request_serializer=storage__pb2.FileName.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.DeleteFile = channel.unary_unary(
                '/storage.StorageController/DeleteFile',
                request_serializer=storage__pb2.FileName.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.ModifyFile = channel.unary_unary(
                '/storage.StorageController/ModifyFile',
                request_serializer=storage__pb2.FileRequest.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)
        self.ListFiles = channel.unary_unary(
                '/storage.StorageController/ListFiles',
                request_serializer=storage__pb2.NodeInfo.SerializeToString,
                response_deserializer=storage__pb2.FileList.FromString,
                _registered_method=True)


class StorageControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NotifyDuplicate(self, request, context):
        """Notify other VMs that a file has been duplicated/ghosted
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOffline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnnounceFile(self, request, context):
        """Node tells controller it has a file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileLocations(self, request, context):
        """Get nodes that have a file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyDuplicate': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyDuplicate,
                    request_deserializer=storage__pb2.FileAnnouncement.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'RegisterNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterNode,
                    request_deserializer=storage__pb2.NodeInfo.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=storage__pb2.NodeInfo.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'SetOffline': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOffline,
                    request_deserializer=storage__pb2.NodeInfo.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'AnnounceFile': grpc.unary_unary_rpc_method_handler(
                    servicer.AnnounceFile,
                    request_deserializer=storage__pb2.FileAnnouncement.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'GetFileLocations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileLocations,
                    request_deserializer=storage__pb2.FileName.FromString,
                    response_serializer=storage__pb2.NodeLocationList.SerializeToString,
            ),
            'CreateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFile,
                    request_deserializer=storage__pb2.FileName.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=storage__pb2.FileName.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'ModifyFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyFile,
                    request_deserializer=storage__pb2.FileRequest.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=storage__pb2.NodeInfo.FromString,
                    response_serializer=storage__pb2.FileList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'storage.StorageController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('storage.StorageController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StorageController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NotifyDuplicate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/NotifyDuplicate',
            storage__pb2.FileAnnouncement.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/RegisterNode',
            storage__pb2.NodeInfo.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/Heartbeat',
            storage__pb2.NodeInfo.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetOffline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/SetOffline',
            storage__pb2.NodeInfo.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnnounceFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/AnnounceFile',
            storage__pb2.FileAnnouncement.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileLocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/GetFileLocations',
            storage__pb2.FileName.SerializeToString,
            storage__pb2.NodeLocationList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/CreateFile',
            storage__pb2.FileName.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/DeleteFile',
            storage__pb2.FileName.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModifyFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/ModifyFile',
            storage__pb2.FileRequest.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.StorageController/ListFiles',
            storage__pb2.NodeInfo.SerializeToString,
            storage__pb2.FileList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NodeFileServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DownloadFile = channel.unary_unary(
                '/storage.NodeFileService/DownloadFile',
                request_serializer=storage__pb2.FileDownloadRequest.SerializeToString,
                response_deserializer=storage__pb2.FileContent.FromString,
                _registered_method=True)
        self.NotifyDuplicate = channel.unary_unary(
                '/storage.NodeFileService/NotifyDuplicate',
                request_serializer=storage__pb2.FileAnnouncement.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                _registered_method=True)


class NodeFileServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyDuplicate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeFileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DownloadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=storage__pb2.FileDownloadRequest.FromString,
                    response_serializer=storage__pb2.FileContent.SerializeToString,
            ),
            'NotifyDuplicate': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyDuplicate,
                    request_deserializer=storage__pb2.FileAnnouncement.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'storage.NodeFileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('storage.NodeFileService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NodeFileService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.NodeFileService/DownloadFile',
            storage__pb2.FileDownloadRequest.SerializeToString,
            storage__pb2.FileContent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyDuplicate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/storage.NodeFileService/NotifyDuplicate',
            storage__pb2.FileAnnouncement.SerializeToString,
            storage__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
